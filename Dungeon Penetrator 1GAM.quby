/* 
 * Dungeon Penetrator #OneGameAMonth
 * By Glen McNamee
 *
 * 
 */

setFont( 'Arial', 12 )
 
$ssheet = new Image("terrain.png")
$intro1     = new Image( "intro1.png" )
$intro2     = new Image( "intro2.png" )
$1gamlogo     = new Image( "1gamlogo.png" )
$imgtitle      = new Image( "title.png" )
$credit = new Image( "credits.png" )
$music = new Sound( 'K8-Bit - Adieu.mp3' ) 

$gamemode = 0
$point = 0
$oldmap = []

$level = 0
$message = [] 
$moved = 0
$speed = 1
$wspeed = 40
$inv=[] 
$obj=[]
$x=[]
$y=[]
$maxobj = 0
$maxitm = 0
$alive = []
$map2 = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
]
$map3 = []
$map = []
$d = []
$dia = 0
$coins = 0
$health = [] 
$newmap = []
$plyx = 1
$plyy = 1

onEachFrame() do
    fill( :black )

    if $gamemode == 0
        if $point < 1 
            $gameTime = getTime()
            $point = 1
        end

        $point = (getTime() - $gameTime)/10+1  

        if $point < 174 
            fill( :white )
            setColor( :white, $point/175 )
            drawImage ($intro1, -400+($point*3), 196, false )
            drawImage ($intro2, 700-($point*3), 240, false )
        end
        if $point > 173 and $point < 201
            fill( :white )
            drawImage ($intro1, 124, 196, false )
            drawImage ($intro2, 191, 240, false )
        end
        if $point > 200 and $point < 555
            fill( 455-$point,455-$point,455-$point )
             setColor( 455-$point,455-$point,455-$point, 1 )
            drawImage ($intro1, 124, 196, false )
            drawImage ($intro2, 191, 240, false )
        end
        
        if $point > 555
            if $point > 555 and $point < 810 
                setColor( $point-555,$point-555,$point-555, 1 )
            end
            if $point > 865 
                setColor( 1120-$point,1120-$point,1120-$point, 1 )
            end        
            drawImage( $1gamlogo, 0, 0 )
            if $point > 1355 
                $point = -100
                $gamemode = 1
            end
        end
    end

  if ($gamemode == 1) 

        // Title screen
        
        if $point < 1 
                $gameTime = getTime()
                $point = 1
                $music.play() 
                cred = 0 
            end
            $point =  (getTime() - $gameTime)/10+1

        setColor( :white )
        drawImage( $imgtitle , 0, 0, false )
        
        if $point < 255

            setalpha($point/255)
        end
        if $point > 510

            setalpha((765-$point)/255)
        end
        if $point > 1000
            $gameTime = getTime()
            $point = 1
            cred = cred + 1
            if cred > 5
                cred = 0
            end
        end

        drawImage( $credit,  0, cred*56, 310, 56, 150, 200, false )

        if getControls().isLeftClick() or getControls().isKeyDown( :space )
            $gamemode =2
        end 
    end 

    // Draw Level 
    if $gamemode == 2
        $maxhealth = 12
        $message = [] 
        $level = 0
        _clearvar()        
        _createmap()
        $coins = 0
        $inv=[]
        $dead = 0
        $gamemode = 3
        $timecheck = getTime()
    end
    // Main Game Loop
    if $gamemode == 3 
        _newerdraw()
        _showinv()
        if $timecheck+200 < getTime()
            $timecheck = getTime()
            _moveobjs() 
        end
        _mess()
        //_wait()
        
    end
    if $gamemode == 4
        $level = $level + 1
        $message = [] 
        _clearvar()        
        _createmap()
        $dead = 0
        $alive[0] = 1 
        $gamemode = 3
    end

end

def _wait()
150000.times() do |i|
// do things here
end
end

def _clearvar()
    x = 0 
    y = 0
    while y < 64
        $map3[y*64+x] = 0   
        $map2[y][x] = 0
        x = x + 1
        if x == 64
            x = 0
            y = y + 1
        end    
    end
end 

def _moveobjs()
obj = 1
alive = 0
$moved = 0
if $alive[0] == 1
_humon(0)
else

$moved = 1
end
if $moved == 1
getControls().isLeftPressed()
while obj < $maxobj 

if $alive[obj] == 1
if $obj[obj] == 21 or $obj[obj] == 22
_objs(obj)
end 
end
obj = obj + 1
end 

if $alive[0] == 0

    if getControls().isLeftClick() or getControls().isKeyDown( :space )
        $point = 0
        $gamemode = 1 
        end 
    end
end    
    if $alive[0] == 2
        if getControls().isLeftClick() or getControls().isKeyDown( :space )
        $gamemode = 4
        end 
    end



end 

// ------------------

def _humon(obj)
    if $health[0]<1 
        $alive[0] = 0
    	$map2[$y[obj]][$x[obj]] = $oldmap[obj]
		$message.add ("LOL. You died - Press space or click mouse to restart") 
		return
	else
		ny = $y[obj]
		nx = $x[obj]

		if getControls().isKeyDown( :d ) or getControls().isKeyDown( :right )
			nx = $x[obj]+$speed
			$moved = 1
		end
		if getControls().isKeyDown( :a ) or getControls().isKeyDown( :left )
			nx = $x[obj]-$speed
			$moved = 1
		end
		if getControls().isKeyDown( :w ) or getControls().isKeyDown( :up )
			ny = $y[obj]-$speed
			$moved = 1
		end
		if getControls().isKeyDown( :s ) or getControls().isKeyDown( :down )
			ny = $y[obj]+$speed
			$moved = 1
		end
		if getControls().isLeftPressed()
			if GetControls().getMouseY() > 0 and GetControls().getMouseY() < 16
				if GetControls().getMouseX() > 310-128 and GetControls().getMouseX() < 438
					inv = ((GetControls().getMouseX()-182)/16).ceil()-1
					if $inv[inv] == 10
						$message.add ("Your health is restored") 
						$health[0] = $maxhealth
						$inv.delete(10)
					end
					if $inv[inv] == 13
						$maxhealth = $maxhealth + 1
						$message.add ("You feel stronger") 
						$inv.delete(13)
					end
					$move = 1 
				end
			end
		end 

		if $map2[ny][nx] > 20 
			if $obj[$map2[ny][nx]-20]==22 or $obj[$map2[ny][nx]-20]==21
			strike = rand(0,$health[0]).ceil()
			$health[$map2[ny][nx]-20]=$health[$map2[ny][nx]-20]-strike
			$message.add ("You hit ememy for "+strike+" damage") 

		end
	end

	if $oldmap[$obj] > 9 and $oldmap[$obj]<20 
        if $oldmap[obj] == 12
            $coins = $coins + 1
            $message.add ("You pick up an coin") 
        else
		    $inv.add($oldmap[obj])
            if $oldmap[obj] == 10 then $message.add ("You pick up an health potion") end
            if $oldmap[obj] == 11 then $message.add ("You pick up an old key") end
            if $oldmap[obj] == 13 then $message.add ("You pick up an strength spell") end
        end
		$map2[$y[0]][$x[0]] = 20
		$oldmap[obj] = 1
		$move = 1 
	end 


	$map2[$y[obj]][$x[obj]] = $oldmap[obj]

	if $map2[ny][nx] == 1 or $map2[ny][nx] == 8 or $map2[ny][nx] == 4 or $map2[ny][nx] == 5
		$x[obj] = nx
		$y[obj] = ny
	end 
	if $map2[ny][nx] > 9 and $map2[ny][nx] < 20
		$x[obj] = nx
		$y[obj] = ny
	end

	if $oldmap[$obj] == 5
		$gamemode = 4 
	end 


	if $map2[ny][nx] == 7 
		$map2[ny][nx] = 8
	end 

	if $map2[ny][nx] == 9 
        if $inv.includes(11)
		    $message.add ("You unlock the door") 
		    $inv.delete(11)
		    $map2[ny][nx] = 8
        else
            $message.add ("The door is locked. You need a find a key") 
        end 
	end 

	$oldmap[obj] = $map2[$y[obj]][$x[obj]]
	$map2[$y[obj]][$x[obj]] = 20+obj

	end
end 

// ------------------------


def _objs(obj)
    if $health[obj]<1 
        $alive[obj] = 0
        $map2[$y[obj]][$x[obj]] = $oldmap[obj]
        $message.add ("You defeated the enemy") 
        return
    else
        $map2[$y[obj]][$x[obj]] = $oldmap[obj]
        xd = ($x[obj]-$x[0])
        yd = ($y[obj]-$y[0])
        if xd < 5 and xd > -5 
            if yd < 5 and yd > -5 
                $d[obj] = 5
            end 
        else
            if $d[obj] == 5 
                $d[obj] = 0
            end 
        end
        if $obj[obj]==22
            if $d[obj] == 3 
                nx = $x[obj]+$speed
                ny = $y[obj]
            end
            if $d[obj] == 1 
                nx = $x[obj]-$speed
                ny = $y[obj]
            end
            if $d[obj] == 2 
                nx = $x[obj] 
                ny = $y[obj]-$speed
            end
            if $d[obj] == 0 
                nx = $x[obj] 
                ny = $y[obj]+$speed
            end
        end 

        if $obj[obj]==21
            if $d[obj] == 0 
                nx = $x[obj]+$speed
                ny = $y[obj]
            end
            if $d[obj] == 2 
                nx = $x[obj]-$speed
                ny = $y[obj]
            end
            if $d[obj] == 1 
                nx = $x[obj] 
                ny = $y[obj]-$speed
            end
            if $d[obj] == 3 
                nx = $x[obj] 
                ny = $y[obj]+$speed
            end
        end 

        if $d[obj] == 5
            nx = $x[obj]
            ny = $y[obj]
            if $x[obj]>$x[0] 
                nx = $x[obj]-$speed 
            end 
            if $x[obj]<$x[0] 
                nx = $x[obj]+$speed 
            end 
            if $y[obj]>$y[0] 
                ny = $y[obj]-$speed 
            end 
            if $y[obj]<$y[0] 
                ny = $y[obj]+$speed 
            end 
        end

        if $map2[ny][nx] == 20
            strike = rand(0,$health[obj]).ceil()
            $health[0]=$health[0]-strike
            $message.add ("Ememy hits you for "+strike+" damage") 
        end

        if $map2[ny][nx] == 1 or $map2[ny][nx] == 8 or $map2[ny][nx] == 4 
            $x[obj]=nx
            $y[obj]=ny
        else 
            $d[obj] = $d[obj] + 1
            if $d[obj] == 4
                $d[obj] = 0
            end
        end

        $oldmap[obj] = $map2[$y[obj]][$x[obj]]
        $map2[$y[obj]][$x[obj]] = 20+obj
    end
end 



def _newerdraw()
    fill( :black )
    //  screensize
    xsize = 31
    ysize = 20
        anim = 0 
        
    xx = $x[0]-(xsize/2)
    yy = $y[0]-(ysize/2)
    xdif = 0
    ydif = 0 
    if xx < 0 
        xdif = xx
		xx = 0
	end
	if xx > 64-xsize
		xdif = xx-(64-xsize)
        xx = 64-xsize
        
	end
	if yy < 0
        ydif = yy
		yy = 0
	end
	if yy > 63-ysize
        ydif = yy-(63-ysize)
		yy = 63-ysize
	end
	
    

	y = 0
	x = 0 
	while y < ysize
        
    xxx = xx + x
	yyy = yy + y  
    
    xxxx = (x*16)+(310-(xsize*8))
	yyyy = (y*16)+(200-(ysize*8))
    
    x3 = x-(xsize/2)-xdif
	y3 = y-(ysize/2)-ydif
    
	if x3 < 0
		x3 = -x3
    end
	if y3 < 0 
		y3 = -y3 
	end

	// ------------------------
    
    col = 255 - ((x3+y3)*24)
    

    
	if col < 50 
        if $map3[yyy*64+xxx] == 1
            col = 50 
        end 
    else
        $map3[yyy*64+xxx] = 1
    end 
    
    // ------------------
    
	setColor( col,col,col, 1 )
          
          if $map2[yyy][xxx]==1 or $map2[yyy][xxx]>9 
                drawImage ($ssheet , 16, 0, 16, 16, xxxx, yyyy )
            end
            if $map2[yyy][xxx]==3
                drawImage ($ssheet, 32, 0, 16, 16, xxxx, yyyy )
            end
            if $map2[yyy][xxx]==2
                //drawImage ($ssheet, 00, 00, 16, 16, xxxx, yyyy )
            end
            if $map2[yyy][xxx]==5
                drawImage ($ssheet, 48, 0, 16, 16, xxxx, yyyy )
            end
            if $map2[yyy][xxx]==4
                drawImage ($ssheet, 64, 0, 16, 16, xxxx, yyyy )
            end
            if $map2[yyy][xxx]==7
                drawImage ($ssheet , 80,00, 16, 16, xxxx, yyyy )
	        end
            if $map2[yyy][xxx]==8
                drawImage ($ssheet , 96,0, 16, 16, xxxx, yyyy )
            end
            if $map2[yyy][xxx]==9
                drawImage ($ssheet , 112,0, 16, 16, xxxx, yyyy )
            end
        if col > 50             
            if $map2[yyy][xxx]==10
                drawImage ($ssheet , 128,0, 16, 16, xxxx, yyyy )
            end
            if $map2[yyy][xxx]==11
                    drawImage ($ssheet, 144, 0, 16, 16, xxxx, yyyy )
            end   
            if $map2[yyy][xxx]==12
                    drawImage ($ssheet, 160, 0, 16, 16, xxxx, yyyy )
            end 
            if $map2[yyy][xxx]==13
                    drawImage ($ssheet, 176, 0, 16, 16, xxxx, yyyy )
            end   

            
            if $map2[yyy][xxx]>19 
                obj = $map2[yyy][xxx]-20
            
                if $obj[obj]==20

                drawImage ($ssheet, 192, 0, 16, 16, xxxx, yyyy )
			    end 
                if $obj[obj]==21

                drawImage ($ssheet, 208, 0, 16, 16, xxxx, yyyy )
                end 
                if $obj[obj]==22
                drawImage ($ssheet, 224, 0, 16, 16, xxxx, yyyy )
                end 

             end
        end    
            
            x = x + 1
            if x == xsize
                x = 0
                y = y + 1
            end
        end
        setColor( 255,255,255, 1 )

end  

def _showinv()
    drawImage ($ssheet, 240, 0, 16, 16, 4, 4 )
if $health[0]>1
setColor( :red )
drawLine( 22, 10, 22+($health[0]*5), 10, 5 ) 
end
setColor( :white )
drawLine( 22, 09, 22+($maxhealth*5), 09, 1 )
drawLine( 22, 13, 22+($maxhealth*5), 13, 1 )

drawImage ($ssheet, 64, 0, 16, 16, 540, 4 )
fillText( $level,560,4)


drawImage ($ssheet, 158, 0, 16, 16, 570, 4 )
fillText( $coins,590,4)

y= 0
while y < $inv.length()
xxxx = 310-128 + (y*16) 
if $inv[y]==10
    drawImage ($ssheet, 128, 0, 16, 16, xxxx, 4 )
end 
if $inv[y]==11
    drawImage ($ssheet, 142, 0, 16, 16, xxxx, 4 )
end 
if $inv[y]==12
    drawImage ($ssheet, 158, 0, 16, 16, xxxx, 4 ) 
end 
if $inv[y]==13
    drawImage ($ssheet, 174, 0, 16, 16, xxxx, 4 )
end 
y=y+1
end


end

def _mess()
mn = $message.size() 
if mn > 0
if mn > 1
fillText( $message[mn-2] , 8, 352 )
end
fillText( $message[mn-1] , 8, 366 )
end
end


// Generate Map 
def _createmap()
    // Map Generator Varibles
    mpx = []
    mpy = []
    mpw = []
    mph = []
    mp = 0
    while mp < 24
        mpw[mp] = rand( 2 , 5).ceil()*2
		mph[mp] = rand( 2 , 5).ceil()*2
		mpx[mp] = rand( (mpw[mp]/2), 62-(mpw[mp]/2) ).ceil()
		mpy[mp] = rand( (mph[mp]/2) , 62-(mph[mp]/2)  ).ceil()

		x1 = mpx[mp]-mpw[mp]/2
        x2 = mpx[mp]+mpw[mp]/2
        y1 = mpy[mp]-mph[mp]/2
        y2 = mpy[mp]+mph[mp]/2

        
        bol = 0 
            y = y1-1
        	x = x1-1  
    		while y < y2+1
                //if $map2[x][y] == 0 or $map2[x][y] == 3
	        	    if $map2[y][x] > 0
                        bol = 1 
                        x =  (x2+1)
                        y = y2+1
                    end 
                //end
		        x = x + 1
		        if x == (x2+1)
			        x = x1-1
                    y = y + 1
                end
		    end
        
        if bol == 0

            y = y1
    		x = x1    
    		while y < y2
	        	    $map2[y][x] = 1
                    if y == y1 or x == x1 or y==y2-1 or x == x2-1
    		            $map2[y][x] = 3
                    end 
		        x = x + 1
		        if x == (x2)
			        x =x1
                    y = y + 1
                end
		    end
                        if mp == 0 

                $x[0]= mpx[mp]
                $y[0]= mpy[mp]
                $map2[mpy[mp]][mpx[mp]] = 20
                $obj[0] = 20
                $oldmap[0] = 4
                $health[0] = 12
                $d[0] = 0
                $alive[0]=1 
            end 
            if mp == 23
              $map2[mpy[mp]][mpx[mp]] = 5
            end
            
            
		    mp = mp + 1
            //end
        end
	    end
        
        
        mp = 0
	    obj = 1 
        // Place Enemies
        
        while obj < 16
            rx = rand( 1, 63 ).ceil()
		    ry = rand( 1 , 63  ).ceil()
            if $map2[ry][rx] == 1
                
                $obj[obj] = 20+rand( 0, 2 ).ceil()
                $oldmap[obj] = 1
                $health[obj] = 5+$level  
                $y[obj] = ry
                $x[obj] = rx
                $d[obj] = 0
                $map2[ry][rx] = 20+obj
                $alive[obj]=1
                obj = obj + 1 
            end
        end
        $maxobj = obj
        
        // Place Items 
        obj2= 0 
            while obj2 < 16
            rx = rand( 1, 63 ).ceil()
    	    ry = rand( 1 , 63  ).ceil()
            if $map2[ry][rx] == 1
                if obj2 == 0
                     $map2[ry][rx] =11
                end
                if obj2 > 0 and obj2 < 6
                     $map2[ry][rx] =10
                end
                if  obj2 > 5 and obj2 < 11
                     $map2[ry][rx] =12
                end
                if  obj2 >10  and obj2 < 16
                     $map2[ry][rx] =13
                end
            obj2 = obj2 + 1
            end
            
        end
        
        mpp = -24  
        
    d=0 
	cxx  = [1, 0, -1, 0] 
	cyy = [0, 1, 0, -1]
        // Place Items 
        while mpp < 24
        mp = mpp.abs() 
		while d<4
            x = mpx[mp]+((mpw[mp]/2)*cxx[d])
    		y = mpy[mp]+((mpw[mp]/2)*cyy[d])
    		ce = 0
            cd = 0 
            
			while cd < 32 
	
				cx = (x+(cd*cxx[d]) ).limit( 1, 63 )
				cy = (y+(cd*cyy[d]) ).limit( 1, 63 )
				cx2 = (x+((cd+1)*cxx[d]) ).limit( 1, 63 )
				cy2 = (y+((cd+1)*cxx[d]) ).limit( 1, 63 )

				if $map2[cy][cx]==3 and $map2[cy+cyy[d]][cx+cxx[d]]==3
					cd = 32
					ce = 0 
				else
				    if $map2[cy][cx]==1 
					    ce = cd   
						cd = 32
			        end
				end   
                            
				cd = cd + 1		
                
                if cx < 0 or cy < 0 or  cx > 64 or cy > 64 
                    cd = 32
                    ce = 0
                end

			end   
			
			
			if ce>1
				cd = -4
				while cd < ce
					
				cx = (x+(cd*cxx[d]) )
				cy = (y+(cd*cyy[d]) )
	
					if $map2[cy][cx]==0 
						$map2[cy][cx]=1                             
					end
					if $map2[cy][cx]==3 
                        if rand(0,40).ceil() == 1
						    $map2[cy][cx]=9
                        else
                            $map2[cy][cx]=7       
                        end
					end
				
					cd = cd + 1    
				end   
			end 
			d = d + 1
		end     
		d = 0

		mpp = mpp + 1 
        end      
end 


